// <auto-generated />
using LP2_Atividade2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace LP2_Atividade2.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BancoId");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<int>("Idade");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AgenciaId");

                    b.Property<int?>("ClienteId");

                    b.Property<decimal>("Saldo");

                    b.Property<string>("Titular");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContaId");

                    b.Property<decimal>("Taxa");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("ContasCorrente");
                });

            modelBuilder.Entity("ContaPoupanca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContaId");

                    b.Property<decimal>("TaxaJuros");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("ContasPoupanca");
                });

            modelBuilder.Entity("Solicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContaId");

                    b.Property<string>("Movimentacao");

                    b.HasKey("Id");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("Agencia", b =>
                {
                    b.HasOne("Banco", "Banco")
                        .WithMany("Agencias")
                        .HasForeignKey("BancoId");
                });

            modelBuilder.Entity("Conta", b =>
                {
                    b.HasOne("Agencia", "Agencia")
                        .WithMany("Contas")
                        .HasForeignKey("AgenciaId");

                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("ContaCorrente", b =>
                {
                    b.HasOne("Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId");
                });

            modelBuilder.Entity("ContaPoupanca", b =>
                {
                    b.HasOne("Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId");
                });
#pragma warning restore 612, 618
        }
    }
}
